import commonjs from "@rollup/plugin-commonjs";
import resolve from "@rollup/plugin-node-resolve";
import typescript from "@rollup/plugin-typescript";
import namedOutput from "rollup-plugin-named-output";

const plugins = [
    resolve({ preferBuiltins: true, moduleDirectories: [ "@MTRACK_GRAPH_BUILD@/node_modules" ] }),
    commonjs(),
    typescript({ tsconfig: "tsconfig.json", declaration: true, declarationDir: "@MTRACK_GRAPH_BUILD@/types" }),
    namedOutput({ mapper: (name) => {
        switch (name) {
        case "webpage.js":
            return "graph.js";
        }
        return undefined;
    } })
];

// Define forms
const format = "cjs";
const external = ["fs", "fs/promises", "assert", "process"];

function onwarn(warning) {
    if (warning.pluginCode === "TS2688") {
        return;
    }
    if (warning.code === "CIRCULAR_DEPENDENCY") {
        return;
    }
    if (warning.message === "@rollup/plugin-typescript: outputToFilesystem option is defaulting to true.") {
        return;
    }
    console.warn(warning.message);
}

export default [
    {
        input: "@MTRACK_GRAPH@/src/graph/webpage.ts",
        plugins,
        external,
        onwarn,
        output: {
            dir: "@MTRACK_GRAPH_BUILD@",
            format,
            name: "webpage",
            exports: "named",
            sourcemap: true
        }
    },
    {
        input: "@MTRACK_GRAPH@/src/cli/cli.ts",
        plugins,
        external,
        onwarn,
        output: {
            dir: "@MTRACK_GRAPH_BUILD@",
            format,
            name: "cli",
            exports: "named",
            sourcemap: true
        }
    }
];
